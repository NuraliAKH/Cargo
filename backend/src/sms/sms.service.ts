import { Injectable, Logger } from "@nestjs/common";
import axios from "axios";

@Injectable()
export class SmsService {
  private readonly logger = new Logger(SmsService.name);
  private token: string | null = null;
  private readonly baseUrl = "https://notify.eskiz.uz/api";

  constructor() {
    this.login(); // –ê–≤—Ç–æ-–ª–æ–≥–∏–Ω –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
  }

  private async login() {
    try {
      const { data } = await axios.post(`${this.baseUrl}/auth/login`, {
        email: process.env.ESKIZ_EMAIL,
        password: process.env.ESKIZ_PASSWORD,
      });
      this.token = data.data.token;
      this.logger.log("‚úÖ Eskiz SMS: —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
    } catch (e: any) {
      this.logger.error("‚ùå Eskiz SMS: –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", e?.response?.data || e);
    }
  }

  async sendSms(phone: string, message: string) {
    if (!this.token) {
      this.logger.warn("–¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥...");
      await this.login();
    }

    try {
      await axios.post(
        `${this.baseUrl}/message/sms/send`,
        {
          mobile_phone: phone.replace(/\D/g, ""), // –æ—á–∏—â–∞–µ–º –æ—Ç –ø—Ä–æ–±–µ–ª–æ–≤ –∏ +998
          message,
          from: "4546", // —Ç–≤–æ–π –∫–æ—Ä–æ—Ç–∫–∏–π –Ω–æ–º–µ—Ä –æ—Ç Eskiz (–∑–∞–º–µ–Ω–∏, –µ—Å–ª–∏ –¥—Ä—É–≥–æ–π)
          callback_url: "", // –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
        },
        {
          headers: { Authorization: `Bearer ${this.token}` },
        }
      );
      this.logger.log(`üì© SMS –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${phone}`);
    } catch (e: any) {
      this.logger.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS (${phone})`, e?.response?.data || e);
    }
  }
}
